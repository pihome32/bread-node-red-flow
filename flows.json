[
    {
        "id": "64672e75.03f4a8",
        "type": "tab",
        "label": "CMD",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c080d81d.548348",
        "type": "tab",
        "label": "Sensor",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d7e822af.c12a4",
        "type": "tab",
        "label": "Main loop",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ef7332d8.b66878",
        "type": "tab",
        "label": "HA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6ffc7dda.e666ec",
        "type": "tab",
        "label": "Readme",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b75a5ea0.a8f4e8",
        "type": "tab",
        "label": "Startup",
        "disabled": false,
        "info": ""
    },
    {
        "id": "36270e4a731322c2",
        "type": "tab",
        "label": "Watchdog",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3f9f665d485f7e98",
        "type": "tab",
        "label": "E paper",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a2c4834c.e7fa58",
        "type": "subflow",
        "name": "Process Simulation",
        "info": "",
        "in": [
            {
                "x": 37,
                "y": 103,
                "wires": [
                    {
                        "id": "6d70d582.40d7cc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 728.5,
                "y": 294,
                "wires": [
                    {
                        "id": "9d2669f1.f67b38",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "315f1781.9b8a",
        "type": "subflow",
        "name": "Process Simulation (2)",
        "info": "",
        "in": [
            {
                "x": 37,
                "y": 103,
                "wires": [
                    {
                        "id": "7572c66e.a49098"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 728.5,
                "y": 294,
                "wires": [
                    {
                        "id": "d18bc720.8a5f48",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "a8a3abf.e25bad8",
        "type": "subflow",
        "name": "Process Simulation (3)",
        "info": "",
        "in": [
            {
                "x": 37,
                "y": 103,
                "wires": [
                    {
                        "id": "64ab43cf.6e5e4c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 728.5,
                "y": 294,
                "wires": [
                    {
                        "id": "11fc8064.92484",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "79509665.65e3b8",
        "type": "mqtt-broker",
        "name": "local",
        "broker": "brocker",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "74dcdab5.83e964",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "683f7eec.5c62c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "http://10.70.1.95",
        "port": "1883",
        "clientid": "bread",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "ha/bread_chamber/available",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "online",
        "birthMsg": {},
        "closeTopic": "ha/bread_chamber/available",
        "closeQos": "0",
        "closeRetain": "true",
        "closePayload": "offline",
        "closeMsg": {},
        "willTopic": "ha/bread_chamber/available",
        "willQos": "0",
        "willRetain": "true",
        "willPayload": "offline",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ec1a4fd5.087488",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "ddc00501.5975f8",
        "type": "shared-state",
        "name": "heaterRelay",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "bool",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "c8491213.eb9958",
        "type": "shared-state",
        "name": "enclosureFan",
        "lbl": "",
        "tags": "ha/binary_sensor/bread/enclosureFan/state",
        "historyCount": "2",
        "dataType": "bool",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "b57179f0.c9eaa",
        "type": "shared-state",
        "name": "coolerRelay",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "bool",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "bff6e5d1.24ce68",
        "type": "shared-state",
        "name": "data",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "obj",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "e06ffb1d.7fc6a",
        "type": "shared-state",
        "name": "chamberState",
        "lbl": "",
        "tags": "ha/sensor/bread/chamberState/state",
        "historyCount": "3",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "435b10b7.ae825",
        "type": "shared-state",
        "name": "chamberMode",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "4451538c.85ad4c",
        "type": "shared-state",
        "name": "roomTemp",
        "lbl": "",
        "tags": "ha/sensor/bread/roomTemperature/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "1",
        "numMin": "",
        "numMax": "",
        "unit": "C"
    },
    {
        "id": "defdd5c9.00f138",
        "type": "shared-state",
        "name": "setpoint",
        "lbl": "",
        "tags": "ha/sensor/bread/setpoint/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "1",
        "numMin": "6",
        "numMax": "51",
        "unit": "C"
    },
    {
        "id": "6084ef9b.c26b6",
        "type": "shared-state",
        "name": "chamberTemp",
        "lbl": "",
        "tags": "ha/sensor/bread/chamberTemp/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "1",
        "numMin": "",
        "numMax": "",
        "unit": "C"
    },
    {
        "id": "15fe707b.cbdd78",
        "type": "shared-state",
        "name": "heaterFAN",
        "lbl": "",
        "tags": "ha/binary_sensor/bread/heaterFan/state",
        "historyCount": "2",
        "dataType": "bool",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "84d2f720.b81e98",
        "type": "shared-state",
        "name": "coolerFAN",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "7cc16dfd.c5bd2c",
        "type": "shared-state",
        "name": "distance",
        "lbl": "",
        "tags": "ha/sensor/bread/chamberRawDistance/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "7bda2608.497328",
        "type": "shared-state",
        "name": "heaterTemp",
        "lbl": "",
        "tags": "ha/sensor/bread/heaterTemperature/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "1",
        "numMin": "",
        "numMax": "",
        "unit": "C"
    },
    {
        "id": "3fd19932.a4ee1e",
        "type": "shared-state",
        "name": "DAC",
        "lbl": "",
        "tags": "ha/sensor/bread/DAC/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "0",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "a8983602.60f12",
        "type": "shared-state",
        "name": "heaterPID",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "0",
        "numMax": "1",
        "unit": ""
    },
    {
        "id": "89e0f9c6.9f9cf",
        "type": "shared-state",
        "name": "coolerPID",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "0",
        "numMax": "1",
        "unit": ""
    },
    {
        "id": "190175bc.0bd302",
        "type": "serial-port",
        "serialport": "COM4",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": "10000"
    },
    {
        "id": "4e02b789.93b098",
        "type": "shared-state",
        "name": "timerHours",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "0",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "7373079d.b18318",
        "type": "shared-state",
        "name": "timerMinutes",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "0",
        "numMax": "50",
        "unit": ""
    },
    {
        "id": "a17d903.acd497",
        "type": "shared-state",
        "name": "startTime",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "e3998089.5fb718",
        "type": "shared-state",
        "name": "programRunning",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "c3c81c25.d604a8",
        "type": "shared-state",
        "name": "programStep",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "d8f04e64.8ea568",
        "type": "mqtt-broker",
        "name": "info2",
        "broker": "node47936-env-5539796.jcloud.ik-server.com",
        "port": "11640",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "e9549c24.e36728",
        "type": "shared-state",
        "name": "programStepEnd",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "c4b6d6e3.1e084",
        "type": "shared-state",
        "name": "test",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "obj",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "eaee578a.1be1c",
        "type": "shared-state",
        "name": "programLoaded",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "str",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "1689f65e.64e27a",
        "type": "shared-state",
        "name": "timerTemp",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "5",
        "numMax": "40",
        "unit": ""
    },
    {
        "id": "34ccbdec.7dd8fa",
        "type": "shared-state",
        "name": "timer",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "bool",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "b25c78dd.d9a94",
        "type": "shared-state",
        "name": "timerEnd",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "56f0968a.d5a078",
        "type": "config-log",
        "logname": "particle",
        "logdir": "/home/pi",
        "stamp": "local",
        "logstyle": "plain",
        "logrotate": false,
        "logcompress": false,
        "logrotatecount": "5",
        "logsize": "1000"
    },
    {
        "id": "a14f286.72675d8",
        "type": "gauth"
    },
    {
        "id": "1e142654.59cf12",
        "type": "shared-state",
        "name": "radiator",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": "C"
    },
    {
        "id": "f6f305728d7ada59",
        "type": "shared-state",
        "name": "chipTemperature",
        "lbl": "",
        "tags": "ha/sensor/bread/chipTemperature/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "1",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "a76f704b76945b33",
        "type": "shared-state",
        "name": "chamber_air_pressure",
        "lbl": "",
        "tags": "ha/sensor/bread/chamberAirPressure/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "46c2942efd309a25",
        "type": "shared-state",
        "name": "chamber_air_quality",
        "lbl": "",
        "tags": "ha/sensor/bread/chamberAirQuality/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "ee5d991292bcbb8e",
        "type": "shared-state",
        "name": "chamberHumidity",
        "lbl": "",
        "tags": "ha/sensor/bread/chamberHumidity/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "eec806488eba2258",
        "type": "shared-state",
        "name": "roomHumidity",
        "lbl": "",
        "tags": "ha/sensor/bread/roomTemperature/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "12c64b76827f6e95",
        "type": "shared-state",
        "name": "fermentation_volume",
        "lbl": "",
        "tags": "ha/sensor/bread/fermentationVolume/state",
        "historyCount": "2",
        "dataType": "num",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "22faefc49376ed22",
        "type": "shared-state",
        "name": "container",
        "lbl": "",
        "tags": "",
        "historyCount": "2",
        "dataType": "str",
        "boolType": "bool",
        "boolStrTrue": "",
        "boolStrFalse": "",
        "precision": "",
        "numMin": "",
        "numMax": "",
        "unit": ""
    },
    {
        "id": "30026e01.59ef02",
        "type": "function",
        "z": "a2c4834c.e7fa58",
        "name": "30 sec RC + 20",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 30*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue + 20;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 626.5,
        "y": 207,
        "wires": [
            [
                "9d2669f1.f67b38"
            ]
        ]
    },
    {
        "id": "fcdbb78b.ec6bb8",
        "type": "inject",
        "z": "a2c4834c.e7fa58",
        "name": "Inject -0.2 at start",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "-0.2",
        "payloadType": "num",
        "x": 134.5,
        "y": 30,
        "wires": [
            [
                "6d70d582.40d7cc"
            ]
        ]
    },
    {
        "id": "d2f1bf16.20b18",
        "type": "function",
        "z": "a2c4834c.e7fa58",
        "name": "10 sec RC",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 10*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 451,
        "y": 207,
        "wires": [
            [
                "30026e01.59ef02"
            ]
        ]
    },
    {
        "id": "6d70d582.40d7cc",
        "type": "delay",
        "z": "a2c4834c.e7fa58",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 268,
        "y": 104,
        "wires": [
            [
                "7e41515a.444e38"
            ]
        ]
    },
    {
        "id": "48bba734.cb2b7",
        "type": "function",
        "z": "a2c4834c.e7fa58",
        "name": "2 msg transport delay",
        "func": "// stores messages in a fifo until the specified number have been received, \n// then releases them as new messages are received.\n// during the filling phase the earliest message is passed on each time \n// a message is received, but it is also left in the fifo\nvar fifoMaxLength = 2;\nvar fifo = context.get('fifo') || [];\n// push the new message onto the top of the array, messages are shifted down and\n// drop off the front\nvar length = fifo.push(msg);  // returns new length\nif (length > fifoMaxLength) {\n    newMsg = fifo.shift();\n} else {\n    // not full yet, make a copy of the msg and pass it on\n    var newMsg = JSON.parse(JSON.stringify(fifo[0]));\n}\ncontext.set('fifo', fifo);\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 258,
        "y": 208,
        "wires": [
            [
                "d2f1bf16.20b18"
            ]
        ]
    },
    {
        "id": "9d2669f1.f67b38",
        "type": "function",
        "z": "a2c4834c.e7fa58",
        "name": "Clear all except payload",
        "func": "msg2 = {payload: msg.payload};\nreturn msg2;",
        "outputs": 1,
        "noerr": 0,
        "x": 545,
        "y": 293,
        "wires": [
            []
        ]
    },
    {
        "id": "7e41515a.444e38",
        "type": "range",
        "z": "a2c4834c.e7fa58",
        "minin": "0",
        "maxin": "1",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": false,
        "name": "",
        "x": 87,
        "y": 208,
        "wires": [
            [
                "48bba734.cb2b7"
            ]
        ]
    },
    {
        "id": "bf75b64e.6b2288",
        "type": "function",
        "z": "315f1781.9b8a",
        "name": "30 sec RC + 20",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 30*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue + 20;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 626.5,
        "y": 207,
        "wires": [
            [
                "d18bc720.8a5f48"
            ]
        ]
    },
    {
        "id": "8b13dab8.5b111",
        "type": "inject",
        "z": "315f1781.9b8a",
        "name": "Inject -0.2 at start",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "-0.2",
        "payloadType": "num",
        "x": 134.5,
        "y": 30,
        "wires": [
            [
                "7572c66e.a49098"
            ]
        ]
    },
    {
        "id": "6a59c527.82190c",
        "type": "function",
        "z": "315f1781.9b8a",
        "name": "10 sec RC",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 10*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 451,
        "y": 207,
        "wires": [
            [
                "bf75b64e.6b2288"
            ]
        ]
    },
    {
        "id": "7572c66e.a49098",
        "type": "delay",
        "z": "315f1781.9b8a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 268,
        "y": 104,
        "wires": [
            [
                "f06fb8ea.421cd"
            ]
        ]
    },
    {
        "id": "7febaf3c.f11928",
        "type": "function",
        "z": "315f1781.9b8a",
        "name": "2 msg transport delay",
        "func": "// stores messages in a fifo until the specified number have been received, \n// then releases them as new messages are received.\n// during the filling phase the earliest message is passed on each time \n// a message is received, but it is also left in the fifo\nvar fifoMaxLength = 2;\nvar fifo = context.get('fifo') || [];\n// push the new message onto the top of the array, messages are shifted down and\n// drop off the front\nvar length = fifo.push(msg);  // returns new length\nif (length > fifoMaxLength) {\n    newMsg = fifo.shift();\n} else {\n    // not full yet, make a copy of the msg and pass it on\n    var newMsg = JSON.parse(JSON.stringify(fifo[0]));\n}\ncontext.set('fifo', fifo);\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 258,
        "y": 208,
        "wires": [
            [
                "6a59c527.82190c"
            ]
        ]
    },
    {
        "id": "d18bc720.8a5f48",
        "type": "function",
        "z": "315f1781.9b8a",
        "name": "Clear all except payload",
        "func": "msg2 = {payload: msg.payload};\nreturn msg2;",
        "outputs": 1,
        "noerr": 0,
        "x": 545,
        "y": 293,
        "wires": [
            []
        ]
    },
    {
        "id": "f06fb8ea.421cd",
        "type": "range",
        "z": "315f1781.9b8a",
        "minin": "0",
        "maxin": "1",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": false,
        "name": "",
        "x": 87,
        "y": 208,
        "wires": [
            [
                "7febaf3c.f11928"
            ]
        ]
    },
    {
        "id": "68ed205b.854af",
        "type": "function",
        "z": "a8a3abf.e25bad8",
        "name": "30 sec RC + 20",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 30*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue + 20;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 626.5,
        "y": 207,
        "wires": [
            [
                "11fc8064.92484"
            ]
        ]
    },
    {
        "id": "f2f1bec6.236258",
        "type": "inject",
        "z": "a8a3abf.e25bad8",
        "name": "Inject -0.2 at start",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "-0.2",
        "payloadType": "num",
        "x": 134.5,
        "y": 30,
        "wires": [
            [
                "64ab43cf.6e5e4c"
            ]
        ]
    },
    {
        "id": "b9306c61.07beb",
        "type": "function",
        "z": "a8a3abf.e25bad8",
        "name": "10 sec RC",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 10*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 451,
        "y": 207,
        "wires": [
            [
                "68ed205b.854af"
            ]
        ]
    },
    {
        "id": "64ab43cf.6e5e4c",
        "type": "delay",
        "z": "a8a3abf.e25bad8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 268,
        "y": 104,
        "wires": [
            [
                "59b25e00.d8d11"
            ]
        ]
    },
    {
        "id": "9d2b27f9.2ddd78",
        "type": "function",
        "z": "a8a3abf.e25bad8",
        "name": "2 msg transport delay",
        "func": "// stores messages in a fifo until the specified number have been received, \n// then releases them as new messages are received.\n// during the filling phase the earliest message is passed on each time \n// a message is received, but it is also left in the fifo\nvar fifoMaxLength = 2;\nvar fifo = context.get('fifo') || [];\n// push the new message onto the top of the array, messages are shifted down and\n// drop off the front\nvar length = fifo.push(msg);  // returns new length\nif (length > fifoMaxLength) {\n    newMsg = fifo.shift();\n} else {\n    // not full yet, make a copy of the msg and pass it on\n    var newMsg = JSON.parse(JSON.stringify(fifo[0]));\n}\ncontext.set('fifo', fifo);\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 258,
        "y": 208,
        "wires": [
            [
                "b9306c61.07beb"
            ]
        ]
    },
    {
        "id": "11fc8064.92484",
        "type": "function",
        "z": "a8a3abf.e25bad8",
        "name": "Clear all except payload",
        "func": "msg2 = {payload: msg.payload};\nreturn msg2;",
        "outputs": 1,
        "noerr": 0,
        "x": 545,
        "y": 293,
        "wires": [
            []
        ]
    },
    {
        "id": "59b25e00.d8d11",
        "type": "range",
        "z": "a8a3abf.e25bad8",
        "minin": "0",
        "maxin": "1",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": false,
        "name": "",
        "x": 87,
        "y": 208,
        "wires": [
            [
                "9d2b27f9.2ddd78"
            ]
        ]
    },
    {
        "id": "2edb92ac.0ac33e",
        "type": "mqtt out",
        "z": "64672e75.03f4a8",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "74dcdab5.83e964",
        "x": 1570,
        "y": 200,
        "wires": []
    },
    {
        "id": "e33b4447.edd14",
        "type": "json",
        "z": "64672e75.03f4a8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 180,
        "wires": [
            [
                "2edb92ac.0ac33e"
            ]
        ]
    },
    {
        "id": "1e8f4cd1.7b9e23",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "Prepare message for DAC",
        "rules": [
            {
                "t": "set",
                "p": "temp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.DAC",
                "pt": "msg",
                "to": "temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "state/DAC",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 180,
        "wires": [
            [
                "e33b4447.edd14"
            ]
        ]
    },
    {
        "id": "a3f4cfa0.4c2fd8",
        "type": "get-shared-state",
        "z": "64672e75.03f4a8",
        "state": "ddc00501.5975f8",
        "name": "heaterRelay",
        "triggerOnInit": true,
        "x": 130,
        "y": 120,
        "wires": [
            [
                "4441a7ff.ccde"
            ]
        ]
    },
    {
        "id": "fff30cf1.14895",
        "type": "get-shared-state",
        "z": "64672e75.03f4a8",
        "state": "b57179f0.c9eaa",
        "name": "coolerRelay",
        "triggerOnInit": true,
        "x": 130,
        "y": 180,
        "wires": [
            [
                "4441a7ff.ccde"
            ]
        ]
    },
    {
        "id": "ddaa2721.6d98a",
        "type": "get-shared-state",
        "z": "64672e75.03f4a8",
        "state": "3fd19932.a4ee1e",
        "name": "DAC",
        "triggerOnInit": true,
        "x": 230,
        "y": 360,
        "wires": [
            [
                "1e8f4cd1.7b9e23",
                "35d58b7b.e4a0bc"
            ]
        ]
    },
    {
        "id": "a5faa198.dc456",
        "type": "get-shared-state",
        "z": "64672e75.03f4a8",
        "state": "e06ffb1d.7fc6a",
        "name": "chamberState",
        "triggerOnInit": true,
        "x": 70,
        "y": 360,
        "wires": [
            [
                "dc69b3e825ee6ccd",
                "8daf2ccb.cb67f8"
            ]
        ]
    },
    {
        "id": "4ba42455.672e5c",
        "type": "switch",
        "z": "64672e75.03f4a8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 170,
        "y": 480,
        "wires": [
            [
                "8daf2ccb.cb67f8"
            ],
            [
                "8daf2ccb.cb67f8"
            ],
            [
                "9be6c47a.6a94f"
            ],
            [
                "f6371b8f.ce0d1"
            ]
        ]
    },
    {
        "id": "9be6c47a.6a94f",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "2e70321a.50446e",
                "2f521b49.5af13c"
            ]
        ]
    },
    {
        "id": "f6371b8f.ce0d1",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 580,
        "wires": [
            [
                "b3fd51bd.e6752",
                "2f521b49.5af13c"
            ]
        ]
    },
    {
        "id": "35d58b7b.e4a0bc",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "Prepare message for DAC",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tinkerforge/request/analog_out_v2_bricklet/21tN/set_output_voltage",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 240,
        "wires": [
            [
                "6e756ef9.f8e908"
            ]
        ]
    },
    {
        "id": "6e756ef9.f8e908",
        "type": "template",
        "z": "64672e75.03f4a8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"voltage\": {{payload}} }",
        "output": "str",
        "x": 940,
        "y": 240,
        "wires": [
            [
                "2edb92ac.0ac33e"
            ]
        ]
    },
    {
        "id": "4441a7ff.ccde",
        "type": "template",
        "z": "64672e75.03f4a8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"channel0\":{{global.state.heaterRelay.value}},\"channel1\":{{global.state.coolerRelay.value}}}",
        "output": "str",
        "x": 420,
        "y": 100,
        "wires": [
            [
                "c56ff7f1381623b7"
            ]
        ]
    },
    {
        "id": "39f59899.df5af",
        "type": "inject",
        "z": "64672e75.03f4a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "4441a7ff.ccde",
                "73375e88c23ab2dc"
            ]
        ]
    },
    {
        "id": "8daf2ccb.cb67f8",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 420,
        "wires": [
            [
                "2e70321a.50446e",
                "b3fd51bd.e6752",
                "2f521b49.5af13c"
            ]
        ]
    },
    {
        "id": "2e70321a.50446e",
        "type": "set-shared-state",
        "z": "64672e75.03f4a8",
        "state": "ddc00501.5975f8",
        "name": "heaterRelay",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 970,
        "y": 420,
        "wires": []
    },
    {
        "id": "b3fd51bd.e6752",
        "type": "set-shared-state",
        "z": "64672e75.03f4a8",
        "state": "b57179f0.c9eaa",
        "name": "coolerRelay",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 970,
        "y": 480,
        "wires": []
    },
    {
        "id": "2f521b49.5af13c",
        "type": "set-shared-state",
        "z": "64672e75.03f4a8",
        "state": "c8491213.eb9958",
        "name": "enclosureFan",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 980,
        "y": 540,
        "wires": []
    },
    {
        "id": "533adb8d.895ab4",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "Switch off all relay",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"channel0\":false,\"channel1\":false}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 340,
        "wires": [
            [
                "e2f8990dd097f915",
                "a891f18936a390a9"
            ]
        ]
    },
    {
        "id": "73375e88c23ab2dc",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "tinkerforge/request/hat_brick/Vtg/get_chip_temperature",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tinkerforge/request/hat_brick/Vtg/get_chip_temperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 60,
        "wires": [
            [
                "2edb92ac.0ac33e"
            ]
        ]
    },
    {
        "id": "c56ff7f1381623b7",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "tinkerforge/request/industrial_dual_relay_bricklet/Tfr/set_value",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tinkerforge/request/industrial_dual_relay_bricklet/Tfr/set_value",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 100,
        "wires": [
            [
                "2edb92ac.0ac33e"
            ]
        ]
    },
    {
        "id": "e2f8990dd097f915",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "tinkerforge/request/industrial_dual_relay_bricklet/Tfr/set_value",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tinkerforge/request/industrial_dual_relay_bricklet/Tfr/set_value",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 320,
        "wires": [
            [
                "2edb92ac.0ac33e"
            ]
        ]
    },
    {
        "id": "a891f18936a390a9",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "tinkerforge/request/industrial_dual_relay_bricklet/Tfe/set_value",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tinkerforge/request/industrial_dual_relay_bricklet/Tfe/set_value",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 380,
        "wires": [
            [
                "2edb92ac.0ac33e"
            ]
        ]
    },
    {
        "id": "6183971395ab95dd",
        "type": "change",
        "z": "64672e75.03f4a8",
        "name": "tinkerforge/request/industrial_dual_relay_bricklet/Tfe/set_value",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tinkerforge/request/industrial_dual_relay_bricklet/Tfe/set_value",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 140,
        "wires": [
            [
                "2edb92ac.0ac33e"
            ]
        ]
    },
    {
        "id": "2ac1bb60ca1924aa",
        "type": "get-shared-state",
        "z": "64672e75.03f4a8",
        "state": "15fe707b.cbdd78",
        "name": "heaterFAN",
        "triggerOnInit": true,
        "x": 120,
        "y": 240,
        "wires": [
            [
                "977ac8a3efeef941"
            ]
        ]
    },
    {
        "id": "977ac8a3efeef941",
        "type": "template",
        "z": "64672e75.03f4a8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"channel0\":{{global.state.enclosureFan.value}},\"channel1\":{{global.state.heaterFAN.value}}}",
        "output": "str",
        "x": 380,
        "y": 160,
        "wires": [
            [
                "6183971395ab95dd"
            ]
        ]
    },
    {
        "id": "fe1ac5ae4f472bfe",
        "type": "get-shared-state",
        "z": "64672e75.03f4a8",
        "state": "c8491213.eb9958",
        "name": "enclosureFan",
        "triggerOnInit": true,
        "x": 110,
        "y": 300,
        "wires": [
            [
                "977ac8a3efeef941"
            ]
        ]
    },
    {
        "id": "dc69b3e825ee6ccd",
        "type": "delay",
        "z": "64672e75.03f4a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 120,
        "y": 400,
        "wires": [
            [
                "4ba42455.672e5c"
            ]
        ]
    },
    {
        "id": "6a49d89f.1a17e8",
        "type": "mqtt in",
        "z": "c080d81d.548348",
        "name": "",
        "topic": "+/+/+/+/+/chamber/data/roomTemp",
        "qos": "0",
        "datatype": "auto",
        "broker": "74dcdab5.83e964",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 180,
        "wires": [
            [
                "519dddd5.a6b124"
            ]
        ]
    },
    {
        "id": "4d21aaf7.777404",
        "type": "mqtt in",
        "z": "c080d81d.548348",
        "name": "",
        "topic": "+/+/+/+/+/chamber/data/heaterTemp",
        "qos": "0",
        "datatype": "auto",
        "broker": "74dcdab5.83e964",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 280,
        "wires": [
            [
                "1814f859.119ea"
            ]
        ]
    },
    {
        "id": "519dddd5.a6b124",
        "type": "json",
        "z": "c080d81d.548348",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "74f57265.f82724"
            ]
        ]
    },
    {
        "id": "74f57265.f82724",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.temperature/100",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 180,
        "wires": [
            [
                "17abac16.668be4"
            ]
        ]
    },
    {
        "id": "1814f859.119ea",
        "type": "json",
        "z": "c080d81d.548348",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 280,
        "wires": [
            [
                "f5a51b2b.e15118"
            ]
        ]
    },
    {
        "id": "f5a51b2b.e15118",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.temperature/100",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "9582e8db.d8e608"
            ]
        ]
    },
    {
        "id": "b56e2773.31a2c8",
        "type": "inject",
        "z": "c080d81d.548348",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 760,
        "wires": [
            [
                "8281097c.662558",
                "39d7cb78.f294ec",
                "c9c4189a.75f2c",
                "2f25ad6f.d8f582"
            ]
        ]
    },
    {
        "id": "3bf4ab79.fee764",
        "type": "json",
        "z": "c080d81d.548348",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 760,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "8281097c.662558",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "Prepare message for relay 1",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "state/relay1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.state",
                "pt": "msg",
                "to": "state.relay1.value",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 740,
        "wires": [
            [
                "3bf4ab79.fee764"
            ]
        ]
    },
    {
        "id": "39d7cb78.f294ec",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "Prepare message for relay 2",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "state/relay2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.state",
                "pt": "msg",
                "to": "state.relay2.value",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 780,
        "wires": [
            [
                "3bf4ab79.fee764"
            ]
        ]
    },
    {
        "id": "c9c4189a.75f2c",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "Prepare message for DAC",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "state/DAC",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.DAC",
                "pt": "msg",
                "to": "state.DAC.value",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 820,
        "wires": [
            [
                "3bf4ab79.fee764"
            ]
        ]
    },
    {
        "id": "2f25ad6f.d8f582",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "Prepare message for setpoint",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "state/setpoint",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.setpoint",
                "pt": "msg",
                "to": "state.setpoint.value",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 860,
        "wires": [
            [
                "3bf4ab79.fee764"
            ]
        ]
    },
    {
        "id": "9582e8db.d8e608",
        "type": "set-shared-state",
        "z": "c080d81d.548348",
        "state": "7bda2608.497328",
        "name": "heaterTemp",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 790,
        "y": 280,
        "wires": []
    },
    {
        "id": "17abac16.668be4",
        "type": "set-shared-state",
        "z": "c080d81d.548348",
        "state": "4451538c.85ad4c",
        "name": "roomTemp",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 750,
        "y": 180,
        "wires": []
    },
    {
        "id": "7cbb42beac1ae05c",
        "type": "mqtt in",
        "z": "c080d81d.548348",
        "name": "",
        "topic": "tinkerforge/response/hat_brick/Vtg/get_chip_temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "74dcdab5.83e964",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 210,
        "y": 460,
        "wires": [
            [
                "18e98a47e478cccb"
            ]
        ]
    },
    {
        "id": "6c34ef0b16d13c23",
        "type": "set-shared-state",
        "z": "c080d81d.548348",
        "state": "f6f305728d7ada59",
        "name": "chipTemperature",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 870,
        "y": 460,
        "wires": []
    },
    {
        "id": "59064a69af978b9e",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.temperature",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 440,
        "wires": [
            [
                "6c34ef0b16d13c23"
            ]
        ]
    },
    {
        "id": "18e98a47e478cccb",
        "type": "json",
        "z": "c080d81d.548348",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 460,
        "wires": [
            [
                "59064a69af978b9e"
            ]
        ]
    },
    {
        "id": "620d812db9859b52",
        "type": "mqtt in",
        "z": "c080d81d.548348",
        "name": "",
        "topic": "+/+/+/+/+/chamber/data/chamber_air_quality",
        "qos": "0",
        "datatype": "auto",
        "broker": "74dcdab5.83e964",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 540,
        "wires": [
            [
                "d34ba1e244aa8f5d"
            ]
        ]
    },
    {
        "id": "d34ba1e244aa8f5d",
        "type": "json",
        "z": "c080d81d.548348",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 540,
        "wires": [
            [
                "37b7bf3b8184a109",
                "77fdb8ea3545b05c",
                "a863d6ee8c0f945a",
                "da676165dee5570d"
            ]
        ]
    },
    {
        "id": "37b7bf3b8184a109",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.air_pressure/100",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 580,
        "wires": [
            [
                "51ebd5a15fe334d1"
            ]
        ]
    },
    {
        "id": "51ebd5a15fe334d1",
        "type": "set-shared-state",
        "z": "c080d81d.548348",
        "state": "a76f704b76945b33",
        "name": "chamber_air_pressure",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 860,
        "y": 580,
        "wires": []
    },
    {
        "id": "77fdb8ea3545b05c",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.iaq_index",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 640,
        "wires": [
            [
                "4d09783a245b7402"
            ]
        ]
    },
    {
        "id": "4d09783a245b7402",
        "type": "set-shared-state",
        "z": "c080d81d.548348",
        "state": "46c2942efd309a25",
        "name": "chamber_air_quality",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 860,
        "y": 620,
        "wires": []
    },
    {
        "id": "a863d6ee8c0f945a",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.humidity/100",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 680,
        "wires": [
            [
                "fd8c1cfddd1cf654"
            ]
        ]
    },
    {
        "id": "fd8c1cfddd1cf654",
        "type": "set-shared-state",
        "z": "c080d81d.548348",
        "state": "ee5d991292bcbb8e",
        "name": "chamberHumidity",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 850,
        "y": 680,
        "wires": []
    },
    {
        "id": "da676165dee5570d",
        "type": "change",
        "z": "c080d81d.548348",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.temperature/100",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 520,
        "wires": [
            [
                "238a1ff556bbf0ee"
            ]
        ]
    },
    {
        "id": "238a1ff556bbf0ee",
        "type": "set-shared-state",
        "z": "c080d81d.548348",
        "state": "6084ef9b.c26b6",
        "name": "chamberTemp",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 840,
        "y": 520,
        "wires": []
    },
    {
        "id": "7bb1e955.a8d99",
        "type": "range",
        "z": "d7e822af.c12a4",
        "minin": "0",
        "maxin": "1",
        "minout": "2150",
        "maxout": "1700",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1750,
        "y": 240,
        "wires": [
            [
                "f095adee.1b77c"
            ]
        ]
    },
    {
        "id": "a4506f1b.f1adb8",
        "type": "mqtt out",
        "z": "d7e822af.c12a4",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "74dcdab5.83e964",
        "x": 1450,
        "y": 340,
        "wires": []
    },
    {
        "id": "97674649.be05e8",
        "type": "function",
        "z": "d7e822af.c12a4",
        "name": "",
        "func": "\nvar data = {};\ndata.pv = msg.pv;\ndata.proportional= msg.proportional;\ndata.integral = msg.instegral;\ndata.derivative = msg.derivative;\ndata.smothed_value= msg.smothed_value;\ndata.PID = msg.payload;\nmsg.payload= data;\nmsg.topic=\"PID/cooling\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 340,
        "wires": [
            [
                "a4506f1b.f1adb8"
            ]
        ]
    },
    {
        "id": "a1ee4f29.bb8d38",
        "type": "function",
        "z": "d7e822af.c12a4",
        "name": "",
        "func": "\nvar data = {};\ndata.pv = msg.pv;\ndata.proportional= msg.proportional;\ndata.integral = msg.instegral;\ndata.derivative = msg.derivative;\ndata.smothed_value= msg.smothed_value;\ndata.PID = msg.payload;\nmsg.payload= data;\nmsg.topic=\"PID/heating\";\n\nvar temp = global.get(\"state.chamberTemp.value\");\nif (temp > msg.setpoint + 0.5 ){\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "a4506f1b.f1adb8"
            ]
        ]
    },
    {
        "id": "1ee5d6c.4e64429",
        "type": "range",
        "z": "d7e822af.c12a4",
        "minin": "0",
        "maxin": "1",
        "minout": "2170",
        "maxout": "1730",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1630,
        "y": 560,
        "wires": [
            [
                "f095adee.1b77c"
            ]
        ]
    },
    {
        "id": "850d8f8b.df11f8",
        "type": "inject",
        "z": "d7e822af.c12a4",
        "name": "Send chamber temp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "setpoint",
                "v": "state.setpoint.value",
                "vt": "global"
            },
            {
                "p": "room",
                "v": "state.roomTemp.value",
                "vt": "global"
            },
            {
                "p": "state",
                "v": "state.chamberState.value",
                "vt": "global"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "state.chamberTemp.value",
        "payloadType": "global",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "4a38f99d.c4d1e8"
            ]
        ]
    },
    {
        "id": "596ca967.814d6",
        "type": "PID",
        "z": "d7e822af.c12a4",
        "name": "Cooler PID",
        "setpoint": 21,
        "pb": "1.5",
        "ti": "600",
        "td": "120",
        "integral_default": "0",
        "smooth_factor": 3,
        "max_interval": 600,
        "enable": "0",
        "disabled_op": 0,
        "x": 870,
        "y": 360,
        "wires": [
            [
                "97674649.be05e8",
                "96c55171.7285b8"
            ]
        ]
    },
    {
        "id": "a3d4333b.6db588",
        "type": "PID",
        "z": "d7e822af.c12a4",
        "name": "Heater PID",
        "setpoint": "20",
        "pb": "1",
        "ti": "600",
        "td": "150",
        "integral_default": "0",
        "smooth_factor": "2",
        "max_interval": 600,
        "enable": "0",
        "disabled_op": "0",
        "x": 890,
        "y": 420,
        "wires": [
            [
                "dd44341c.0ef3a8",
                "a1ee4f29.bb8d38"
            ]
        ]
    },
    {
        "id": "f095adee.1b77c",
        "type": "set-shared-state",
        "z": "d7e822af.c12a4",
        "state": "3fd19932.a4ee1e",
        "name": "DAC",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 1710,
        "y": 400,
        "wires": []
    },
    {
        "id": "657ab72c.6ac0c",
        "type": "function",
        "z": "d7e822af.c12a4",
        "name": "",
        "func": "var state = msg.state;\n\nvar room = msg.room;\nvar setpoint = msg.setpoint;\nvar temp = msg.payload;\n\n\nvar coolerpid = {};\nvar heaterpid = {};\nvar newstate = {};\n\ncoolerpid.payload = setpoint + (setpoint -temp);\nheaterpid.payload = temp;\ncoolerpid.setpoint = setpoint ;\nheaterpid.setpoint = setpoint;\nnewstate.payload= state;\nstate = 2;\nif ((setpoint > room + 1) & (setpoint < 40)){\n    coolerpid.enable=false;\n    heaterpid.enable=true;\n    if (temp < setpoint + 1){ state=3}\n\n\n} else if (setpoint < room -1){\n    coolerpid.enable=true;\n    heaterpid.enable=false;\n    if (temp > setpoint - 1){ state=4}\n} else {\n    coolerpid.enable=false;\n    heaterpid.enable=false;\n    state = 2;\n\n}\n\nreturn [coolerpid,heaterpid,{\"payload\":state}];\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 400,
        "wires": [
            [
                "596ca967.814d6",
                "652da999.099258"
            ],
            [
                "a3d4333b.6db588",
                "f844bb70.32ce9"
            ],
            [
                "60ff8f67.bab1d8"
            ]
        ]
    },
    {
        "id": "dd44341c.0ef3a8",
        "type": "set-shared-state",
        "z": "d7e822af.c12a4",
        "state": "a8983602.60f12",
        "name": "heaterPID",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 1100,
        "y": 640,
        "wires": []
    },
    {
        "id": "96c55171.7285b8",
        "type": "set-shared-state",
        "z": "d7e822af.c12a4",
        "state": "89e0f9c6.9f9cf",
        "name": "coolerPID",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 1140,
        "y": 220,
        "wires": []
    },
    {
        "id": "f844bb70.32ce9",
        "type": "switch",
        "z": "d7e822af.c12a4",
        "name": "",
        "property": "enable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "b3f8337f.fc59c8"
            ]
        ]
    },
    {
        "id": "652da999.099258",
        "type": "switch",
        "z": "d7e822af.c12a4",
        "name": "",
        "property": "enable",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1090,
        "y": 280,
        "wires": [
            [
                "bf3d103b.50c56"
            ]
        ]
    },
    {
        "id": "bf3d103b.50c56",
        "type": "delay",
        "z": "d7e822af.c12a4",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1240,
        "y": 280,
        "wires": [
            [
                "e169235c.a2479"
            ]
        ]
    },
    {
        "id": "b3f8337f.fc59c8",
        "type": "delay",
        "z": "d7e822af.c12a4",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1140,
        "y": 520,
        "wires": [
            [
                "3f19d45e.a8663c"
            ]
        ]
    },
    {
        "id": "a89ee010.0f6308",
        "type": "function",
        "z": "d7e822af.c12a4",
        "name": "",
        "func": "var pidTime = global.get(\"state.heaterPID.timestamp\");\nvar statePrev = global.get(\"state.chamberState.history[2].val\");\nvar PID = global.get(\"state.heaterPID.value\");\nvar timeLimit = 60000;\nvar now = Date.now();\nvar msgState={};\nmsg.payload = PID;\nif (PID > 0){\n    msgState.payload = 3;\n    return [msg,msgState];\n\n} else if (now > timeLimit + pidTime) {\n   msgState.payload = 2;\n   return [msg,msgState];\n} else {\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1400,
        "y": 600,
        "wires": [
            [
                "1ee5d6c.4e64429"
            ],
            []
        ]
    },
    {
        "id": "3f19d45e.a8663c",
        "type": "switch",
        "z": "d7e822af.c12a4",
        "name": "",
        "property": "state.chamberState.value",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1290,
        "y": 520,
        "wires": [
            [
                "a89ee010.0f6308"
            ]
        ]
    },
    {
        "id": "e169235c.a2479",
        "type": "switch",
        "z": "d7e822af.c12a4",
        "name": "",
        "property": "state.chamberState.value",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1390,
        "y": 280,
        "wires": [
            [
                "f58f706f.77b4c"
            ]
        ]
    },
    {
        "id": "f58f706f.77b4c",
        "type": "function",
        "z": "d7e822af.c12a4",
        "name": "",
        "func": "var pidTime = global.get(\"state.coolerPID.timestamp\");\n\nvar PID = global.get(\"state.coolerPID.value\");\nvar timeLimit = 60000;\nvar now = Date.now();\nvar msgState={};\nmsg.payload = PID;\n//if (PID > 0){\n    msgState.payload = 4;\n\n//} else if (now > timeLimit + pidTime) {\n//   msgState.payload = 2;\n//}\nreturn [msg,msgState];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1560,
        "y": 300,
        "wires": [
            [
                "7bb1e955.a8d99"
            ],
            []
        ]
    },
    {
        "id": "4a38f99d.c4d1e8",
        "type": "switch",
        "z": "d7e822af.c12a4",
        "name": "",
        "property": "state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 340,
        "wires": [
            [
                "657ab72c.6ac0c"
            ],
            [
                "c3c18d6b.da5d7"
            ]
        ]
    },
    {
        "id": "c3c18d6b.da5d7",
        "type": "change",
        "z": "d7e822af.c12a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "596ca967.814d6",
                "a3d4333b.6db588"
            ]
        ]
    },
    {
        "id": "60ff8f67.bab1d8",
        "type": "set-shared-state",
        "z": "d7e822af.c12a4",
        "state": "e06ffb1d.7fc6a",
        "name": "chamberState",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 820,
        "y": 580,
        "wires": []
    },
    {
        "id": "ff7a26da.217098",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "3fd19932.a4ee1e",
        "name": "DAC",
        "triggerOnInit": true,
        "x": 90,
        "y": 120,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "cefbec1d.ce5ae",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "6084ef9b.c26b6",
        "name": "chamberTemp",
        "triggerOnInit": true,
        "x": 130,
        "y": 200,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "769cbacf.be1f04",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "defdd5c9.00f138",
        "name": "setpoint",
        "triggerOnInit": true,
        "x": 100,
        "y": 260,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "387ed4dd.4072c4",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "15fe707b.cbdd78",
        "name": "heaterFAN",
        "triggerOnInit": true,
        "x": 100,
        "y": 340,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "5f073449.870fd4",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "e06ffb1d.7fc6a",
        "name": "chamberState",
        "triggerOnInit": true,
        "x": 130,
        "y": 440,
        "wires": [
            [
                "342edbbf2f0305dc",
                "b55010a07f38d401"
            ]
        ]
    },
    {
        "id": "d696a30e.fd887",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "4451538c.85ad4c",
        "name": "roomTemp",
        "triggerOnInit": true,
        "x": 100,
        "y": 520,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "9753d34d.f8d1",
        "type": "mqtt in",
        "z": "ef7332d8.b66878",
        "name": "",
        "topic": "ha/bread_chamber/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "683f7eec.5c62c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 840,
        "wires": [
            [
                "707d3dc5.40c064"
            ]
        ]
    },
    {
        "id": "7cb7ef29.57e3a8",
        "type": "set-shared-state",
        "z": "ef7332d8.b66878",
        "state": "e06ffb1d.7fc6a",
        "name": "chamberState",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 1400,
        "y": 820,
        "wires": []
    },
    {
        "id": "707d3dc5.40c064",
        "type": "switch",
        "z": "ef7332d8.b66878",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 820,
        "wires": [
            [
                "b5651157.7de8d8"
            ],
            [
                "c97dbc73.043068"
            ]
        ]
    },
    {
        "id": "b5651157.7de8d8",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 740,
        "wires": [
            [
                "7cb7ef29.57e3a8"
            ]
        ]
    },
    {
        "id": "c97dbc73.043068",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 840,
        "wires": [
            [
                "7cb7ef29.57e3a8"
            ]
        ]
    },
    {
        "id": "fdd911b8.bba56",
        "type": "mqtt in",
        "z": "ef7332d8.b66878",
        "name": "",
        "topic": "ha/bread_chamber/setTemperature",
        "qos": "2",
        "datatype": "auto",
        "broker": "683f7eec.5c62c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "5296dfbf.dad038",
                "3c1126ae73b243df"
            ]
        ]
    },
    {
        "id": "5296dfbf.dad038",
        "type": "set-shared-state",
        "z": "ef7332d8.b66878",
        "state": "defdd5c9.00f138",
        "name": "setpoint",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 1280,
        "y": 200,
        "wires": []
    },
    {
        "id": "4aa17358.f54e8c",
        "type": "switch",
        "z": "ef7332d8.b66878",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 630,
        "y": 400,
        "wires": [
            [
                "65b7fb33.7415f4",
                "97ed996ad44ad02c"
            ],
            [
                "52abb836.60937",
                "d2a76748d119082f"
            ],
            [
                "19d20364a52bf695",
                "d2a76748d119082f"
            ],
            [
                "7bc10efd4607420e",
                "d2a76748d119082f"
            ]
        ]
    },
    {
        "id": "70dff909.28498",
        "type": "mqtt out",
        "z": "ef7332d8.b66878",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "683f7eec.5c62c",
        "x": 1430,
        "y": 380,
        "wires": []
    },
    {
        "id": "52abb836.60937",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "idle",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 440,
        "wires": [
            [
                "70dff909.28498"
            ]
        ]
    },
    {
        "id": "65b7fb33.7415f4",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "standby",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 380,
        "wires": [
            [
                "70dff909.28498"
            ]
        ]
    },
    {
        "id": "9abee798.631bf",
        "type": "inject",
        "z": "ef7332d8.b66878",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ha/bread_chamber/available",
        "payload": "online",
        "payloadType": "str",
        "x": 920,
        "y": 40,
        "wires": [
            [
                "70dff909.28498"
            ]
        ]
    },
    {
        "id": "ca6d32aa.45511",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "7bda2608.497328",
        "name": "heaterTemp",
        "triggerOnInit": true,
        "x": 110,
        "y": 620,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "eec8e5b7b1d8d185",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "f6f305728d7ada59",
        "name": "chipTemperature",
        "triggerOnInit": true,
        "x": 120,
        "y": 700,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "342edbbf2f0305dc",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "msg.state.config.tags",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 500,
        "wires": [
            [
                "70dff909.28498"
            ]
        ]
    },
    {
        "id": "976a0b6cfb92ac11",
        "type": "inject",
        "z": "ef7332d8.b66878",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ha/bread_chamber/action",
        "payload": "off",
        "payloadType": "str",
        "x": 680,
        "y": 100,
        "wires": [
            [
                "70dff909.28498"
            ]
        ]
    },
    {
        "id": "19d20364a52bf695",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "heating",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 480,
        "wires": [
            [
                "70dff909.28498"
            ]
        ]
    },
    {
        "id": "7bc10efd4607420e",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cooling",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 580,
        "wires": [
            [
                "70dff909.28498"
            ]
        ]
    },
    {
        "id": "b55010a07f38d401",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ha/sensor/bread_state/state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 420,
        "wires": [
            [
                "4aa17358.f54e8c"
            ]
        ]
    },
    {
        "id": "97ed996ad44ad02c",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ha/switch/bread/state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 300,
        "wires": [
            [
                "70dff909.28498"
            ]
        ]
    },
    {
        "id": "d2a76748d119082f",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "on",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ha/switch/bread/state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 620,
        "wires": [
            [
                "70dff909.28498"
            ]
        ]
    },
    {
        "id": "887956a106af9471",
        "type": "mqtt in",
        "z": "ef7332d8.b66878",
        "name": "",
        "topic": "ha/bread_chamber/switch_off",
        "qos": "2",
        "datatype": "auto",
        "broker": "683f7eec.5c62c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 540,
        "y": 940,
        "wires": [
            [
                "3be8e03006a20d66"
            ]
        ]
    },
    {
        "id": "3be8e03006a20d66",
        "type": "change",
        "z": "ef7332d8.b66878",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "offline",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ha/bread_chamber/available",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "state.chamberState.value",
                "pt": "global",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "3c1126ae73b243df",
        "type": "debug",
        "z": "ef7332d8.b66878",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 120,
        "wires": []
    },
    {
        "id": "9d263253acdaedc2",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "ee5d991292bcbb8e",
        "name": "chamberHumidity",
        "triggerOnInit": true,
        "x": 120,
        "y": 760,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "d91ebbe7ccc37825",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "a76f704b76945b33",
        "name": "chamber_air_pressure",
        "triggerOnInit": true,
        "x": 140,
        "y": 820,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "69e79af1facf1428",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "46c2942efd309a25",
        "name": "chamber_air_quality",
        "triggerOnInit": true,
        "x": 130,
        "y": 880,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "1d250d54720128c4",
        "type": "get-shared-state",
        "z": "ef7332d8.b66878",
        "state": "c8491213.eb9958",
        "name": "enclosureFan",
        "triggerOnInit": true,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "342edbbf2f0305dc"
            ]
        ]
    },
    {
        "id": "4527b90d9e12de9a",
        "type": "mqtt in",
        "z": "ef7332d8.b66878",
        "name": "",
        "topic": "ha/bread_chamber/set_container",
        "qos": "2",
        "datatype": "auto",
        "broker": "683f7eec.5c62c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "20a16f918ef11233"
            ]
        ]
    },
    {
        "id": "20a16f918ef11233",
        "type": "set-shared-state",
        "z": "ef7332d8.b66878",
        "state": "22faefc49376ed22",
        "name": "container",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 880,
        "y": 1020,
        "wires": []
    },
    {
        "id": "eaab018b.6bc7b8",
        "type": "comment",
        "z": "6ffc7dda.e666ec",
        "name": "",
        "info": "Chamber state:\n- 1 sleep\n- 2 running\n\n\nChamber mode:\n- 1 stand by\n- 2 heating\n- 3 cooling\n\n\n\n",
        "x": 200,
        "y": 140,
        "wires": []
    },
    {
        "id": "fca9d0ba.cf6c",
        "type": "inject",
        "z": "b75a5ea0.a8f4e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"0\":false,\"1\":false}",
        "payloadType": "json",
        "x": 250,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1533ff2f.150d21",
        "type": "set-shared-state",
        "z": "b75a5ea0.a8f4e8",
        "state": "ddc00501.5975f8",
        "name": "heaterRelay",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 750,
        "y": 280,
        "wires": []
    },
    {
        "id": "8bd583fb.b74e88",
        "type": "set-shared-state",
        "z": "b75a5ea0.a8f4e8",
        "state": "b57179f0.c9eaa",
        "name": "coolerRelay",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 750,
        "y": 360,
        "wires": []
    },
    {
        "id": "569aa43c.c67bcc",
        "type": "inject",
        "z": "b75a5ea0.a8f4e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "1533ff2f.150d21",
                "8bd583fb.b74e88",
                "3a138821.9280b8",
                "7674ec0d.8ebf2c",
                "2f8390ec.88537"
            ]
        ]
    },
    {
        "id": "3a138821.9280b8",
        "type": "set-shared-state",
        "z": "b75a5ea0.a8f4e8",
        "state": "15fe707b.cbdd78",
        "name": "heaterFAN",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 750,
        "y": 440,
        "wires": []
    },
    {
        "id": "7674ec0d.8ebf2c",
        "type": "set-shared-state",
        "z": "b75a5ea0.a8f4e8",
        "state": "c8491213.eb9958",
        "name": "enclusoreRelay",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 760,
        "y": 500,
        "wires": []
    },
    {
        "id": "aa9eddc6.a6be48",
        "type": "set-shared-state",
        "z": "b75a5ea0.a8f4e8",
        "state": "e06ffb1d.7fc6a",
        "name": "chamberState",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 800,
        "y": 700,
        "wires": []
    },
    {
        "id": "2f8390ec.88537",
        "type": "change",
        "z": "b75a5ea0.a8f4e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 720,
        "wires": [
            [
                "aa9eddc6.a6be48"
            ]
        ]
    },
    {
        "id": "d7f329f8f1812fc3",
        "type": "mqtt out",
        "z": "b75a5ea0.a8f4e8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "683f7eec.5c62c",
        "x": 1010,
        "y": 180,
        "wires": []
    },
    {
        "id": "d9df279c1cba1a50",
        "type": "change",
        "z": "b75a5ea0.a8f4e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "global.state.setPoint.value",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ha/sensor/bread/setpoint/state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 140,
        "wires": [
            [
                "d7f329f8f1812fc3"
            ]
        ]
    },
    {
        "id": "ae196c70b0a28680",
        "type": "inject",
        "z": "b75a5ea0.a8f4e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "512629b640e774a7",
        "type": "trigger",
        "z": "36270e4a731322c2",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 990,
        "y": 440,
        "wires": [
            [
                "0bf3e6a3c532e3a6"
            ]
        ]
    },
    {
        "id": "edd41f7e57b80a61",
        "type": "get-shared-state",
        "z": "36270e4a731322c2",
        "state": "e06ffb1d.7fc6a",
        "name": "chamberState",
        "triggerOnInit": true,
        "x": 230,
        "y": 480,
        "wires": [
            [
                "3833d56cbfd69f0d"
            ]
        ]
    },
    {
        "id": "3833d56cbfd69f0d",
        "type": "switch",
        "z": "36270e4a731322c2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 480,
        "wires": [
            [
                "512629b640e774a7"
            ],
            [
                "bc1c4ffc3c75a25d"
            ]
        ]
    },
    {
        "id": "bc1c4ffc3c75a25d",
        "type": "change",
        "z": "36270e4a731322c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 520,
        "wires": [
            [
                "512629b640e774a7"
            ]
        ]
    },
    {
        "id": "0bf3e6a3c532e3a6",
        "type": "exec",
        "z": "36270e4a731322c2",
        "command": "sudo shutdown -h now #",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 1370,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "65aa653f0d6e3356",
        "type": "get-shared-state",
        "z": "36270e4a731322c2",
        "state": "7bda2608.497328",
        "name": "heaterTemp",
        "triggerOnInit": true,
        "x": 270,
        "y": 340,
        "wires": [
            [
                "e4e84ca36014a818",
                "0ebb0ac58ec780d9"
            ]
        ]
    },
    {
        "id": "e4e84ca36014a818",
        "type": "switch",
        "z": "36270e4a731322c2",
        "name": ">90",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "90",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "1b0514a061736047"
            ]
        ]
    },
    {
        "id": "1b0514a061736047",
        "type": "change",
        "z": "36270e4a731322c2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ha/bread_chamber/mode/state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 320,
        "wires": [
            [
                "4f85ec3bd6412c4d"
            ]
        ]
    },
    {
        "id": "4f85ec3bd6412c4d",
        "type": "mqtt out",
        "z": "36270e4a731322c2",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "683f7eec.5c62c",
        "x": 920,
        "y": 320,
        "wires": []
    },
    {
        "id": "2f8adb9d63c8fe64",
        "type": "switch",
        "z": "36270e4a731322c2",
        "name": ">55",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "55",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 400,
        "wires": [
            [
                "1b0514a061736047"
            ]
        ]
    },
    {
        "id": "c5a897f7714653a2",
        "type": "get-shared-state",
        "z": "36270e4a731322c2",
        "state": "f6f305728d7ada59",
        "name": "chipTemperature",
        "triggerOnInit": true,
        "x": 260,
        "y": 400,
        "wires": [
            [
                "2f8adb9d63c8fe64"
            ]
        ]
    },
    {
        "id": "0ebb0ac58ec780d9",
        "type": "function",
        "z": "36270e4a731322c2",
        "name": "",
        "func": "var room_temp = global.get(\"state.roomTemp.value\");\nvar heaterFan= false;\nif (msg.payload > room_temp +8){\n    heaterFan= true}\nmsg.payload=heaterFan;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 260,
        "wires": [
            [
                "aca487a64466c578"
            ]
        ]
    },
    {
        "id": "aca487a64466c578",
        "type": "set-shared-state",
        "z": "36270e4a731322c2",
        "state": "15fe707b.cbdd78",
        "name": "heaterFAN",
        "triggerOnInit": true,
        "provideOutput": false,
        "outputs": 0,
        "x": 590,
        "y": 240,
        "wires": []
    },
    {
        "id": "4fb127e13c64d8dc",
        "type": "inject",
        "z": "3f9f665d485f7e98",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "a34b24a3e7f2026c"
            ]
        ]
    },
    {
        "id": "79d1bd849dc8fe5a",
        "type": "mqtt in",
        "z": "3f9f665d485f7e98",
        "name": "",
        "topic": "+/+/e_paper_296x128_bricklet/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "74dcdab5.83e964",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9ba0bf69cc7f3755",
        "type": "debug",
        "z": "3f9f665d485f7e98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 360,
        "wires": []
    },
    {
        "id": "5eb4f00e519bd371",
        "type": "delay",
        "z": "3f9f665d485f7e98",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 770,
        "y": 240,
        "wires": [
            [
                "02a27dcb1f30f88d"
            ]
        ]
    },
    {
        "id": "02a27dcb1f30f88d",
        "type": "change",
        "z": "3f9f665d485f7e98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tinkerforge/request/e_paper_296x128_bricklet/LwN/draw",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "7b83cd7c5a9e3852"
            ]
        ]
    },
    {
        "id": "6e8abed6d4dbb957",
        "type": "change",
        "z": "3f9f665d485f7e98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"color\": \"white\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tinkerforge/request/e_paper_296x128_bricklet/LwN/fill_display",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 100,
        "wires": [
            [
                "d0b286cefbb17788",
                "7b83cd7c5a9e3852"
            ]
        ]
    },
    {
        "id": "7b83cd7c5a9e3852",
        "type": "mqtt out",
        "z": "3f9f665d485f7e98",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "74dcdab5.83e964",
        "x": 970,
        "y": 80,
        "wires": []
    },
    {
        "id": "d0b286cefbb17788",
        "type": "change",
        "z": "3f9f665d485f7e98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{    \"position_x\": 16,    \"position_y\": 48,    \"font\": \"12x16\",    \"color\": \"black\",    \"orientation\": \"horizontal\",    \"text\": msg.chamberTemp }",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tinkerforge/request/e_paper_296x128_bricklet/LwN/draw_text",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 180,
        "wires": [
            [
                "7b83cd7c5a9e3852",
                "5eb4f00e519bd371"
            ]
        ]
    },
    {
        "id": "a34b24a3e7f2026c",
        "type": "function",
        "z": "3f9f665d485f7e98",
        "name": "",
        "func": "var chamberTemp =global.get(\"state.chamberTemp.value\");\n\nmsg.chamberTemp=chamberTemp.toString() + \"^C\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 160,
        "wires": [
            [
                "6e8abed6d4dbb957"
            ]
        ]
    }
]